[] Configurar o docker-compose (criação do container mysql)
[] Instalar e configurar o HeidiSql
[] Criar o banco de dados
[] Adicionar as dependências no pom.xml
- spring-boot-starter-data-jpa
<dependency>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>

- E a do mysql, que deve ser conforme abaixo:
<dependency>
	<groupId>com.mysql</groupId>
	<artifactId>mysql-connector-j</artifactId>
	<scope>runtime</scope>
</dependency>

[] Configurar o arquivo application.yaml
[] Implementar a classe PersonEntity e seu repositório com Hibernate e Spring Data JPA
- Observar que a PersonRepository.java é na verdade uma Interface e não uma Classe
[] Substituir os mocks da classe PersonService pelo acesso ao repositório
- Ajustar as exceptions customizadas:
-- renomear UnsupportedMathOperationException para ResourceNotFoundException (criar, no caso)
-- renomear handleBadRequestException para handleNotFoundException
[] Testar os endpoints
[] Refatorar a classe PersonController (GetMapping, Put, Post, Delete...)
- Esse parâmetro é utilizado pelo swagger e deve ficar: produces = MediaType.APPLICATION_JSON_VALUE
- Ajustar o Delete para o retorno HTTP 204
