Considerando que uma API (endPoint) pode sofrer diversas alterações ao longo do tempo,
é muito importante versioná-la desde o início do projeto.

No nosso projeto não havia versionamento até agora. Vamos então criar.

Supondo que o modelo de Person agora exige um novo atributo, chamado birthDay, vamos alterar nosso código para incluí-lo:

[] Duplicar o pacote br.com.erudio.data.vo.v1, renomeando-o para v2
- CTRL + C / CTRL + V
[] Alterar o VO PersonVOV2, incluindo o campo: private String birthDay;
- Incluir getters && setters
- Alterar o construtor
- Alterar equals & hashcode
[] Ajustar o controller. Há duas formas de fazer:
1 - Duplicar o controller e reescrever com as novas regras: NÃO USAREMOS
2 - Versionar apenas a operação desejada. No nosso caso "create"
- Duplicar o método e renomear para createV2
- Recebendo e retornando um PersonVOV2
- Esse método chama o método create do service. Renomear também para createV2 (AINDA NÃO EXISTE. Criar em PersonService)
- Alterar o path para evitar ambiguidade de rotas: @PostMapping(value = "/v2",...
- Implementar o createV2 de PersonService

[] Implementar o createV2 de PersonService
public PersonVOV2 createV2(PersonVOV2 personVOV2) {
        logger.info("Creating one person v2!");
        var entity = DozerMapper.parseObject(personVOV2, Person.class);
        var voV2 = DozerMapper.parseObject(repository.save(entity), personVOV2.class);
        return voV2;
    }

-- Do jeito que está não irá funcionar, pois o Dozer mapeia personVO e não personV0v2

[] Criar DozerMaper customizado para personVOV2
[] Utilizar o mapper customizado no service
[] Testar a nova versão no Postman

Coisas do capítulo 12
[] Mudar a ordem do retorno JSON do VO
- @JsonPropertyOrder({"id", "firstName", "lastName", "address", "gender"})

[] Mudar o nome da propriedade que será gerada pelo JSON
- @JsonProperty(value = "first_name")
- Atenção: mudando o nome aqui, tem que mudar também em @JsonPropertyOrder e no Postman
{
    "first_name": "Bernardo",
    "last_name": "Oliveira",
    "address": "Livorgno - Italy",
    "gender": "Male"
}

[] Omitir a serialização de uma propriedade
- @JsonIgnore




