## Content Negotiation: capacidade de servir diferentes formatos da mesma informação JSON, XML, PDF, DOC etc.
Fonte: https://www.baeldung.com/spring-mvc-content-negotiation-json-xml

Implementaremos apenas a nível de formato: JSON, XML e YML.


Implementar Content Negotiation via QueryParam. Antes era possível fazer via EXTENSION, mas foi depreciado:
ANTES: http://localhost:8080/api/person/v1.xml
AGORA: http://localhost:8080/api/person/v1?mediaType=xml

Passo a passo:
## Adicionar nova dependência.
<dependency>
	<groupId>com.fasterxml.jackson.dataformat</groupId>
	<artifactId>jackson-dataformat-xml</artifactId>
</dependency>


## Criar a classe WebMvcConfigurer em um novo pacote "config"
```
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

// Com essa annotation o spring saberá que precisa executar essa classe no carregamento
@Configuration
public class WebConfig implements WebMvcConfigurer {
}
```


## Sobrescrever o método configureContentNegotiation
- Botão direito sobre WebMvcConfigurer>> Generate: Override...
@Configuration
public class WebConfig implements WebMvcConfigurer {
    @Override
    public void configureContentNegotiation(ContentNegotiationConfigurer configurer) {
        WebMvcConfigurer.super.configureContentNegotiation(configurer);
    }
}

[] Implementar as propriedades do método configureContentNegotiation
```
        // Via QUERY PARAM
        // Ex: http..../person/v1?mediaType=xml
        configurer.favorParameter(true)
                .parameterName("mediaType")
                .ignoreAcceptHeader(true)
                .useRegisteredExtensionsOnly(false)
                .defaultContentType(MediaType.APPLICATION_JSON)
                .mediaType("json", MediaType.APPLICATION_JSON)
                .mediaType("xml", MediaType.APPLICATION_XML);

```

[] Implementar o content negociation via HEADER PARAM
```
        // Via HEADER PARAM
        // Ex: http..../person/v1
        configurer.favorParameter(false)
                .ignoreAcceptHeader(false)
                .useRegisteredExtensionsOnly(false)
                .defaultContentType(MediaType.APPLICATION_JSON)
                .mediaType("json", MediaType.APPLICATION_JSON)
                .mediaType("xml", MediaType.APPLICATION_XML);
```

[] Implementar o content negociation de arquivos YAML / YML
- Incluir a dependência do Data Format para YAML:
```
        <dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
```
[] Criar um conversor: YamlJacksonToHttpConverter
